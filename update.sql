UPDATE EMP01
SET DEPTNO=30;

SELECT *
FROM EMP01;

CREATE TABLE SAM02
SELECT * FROM DEPT;

UPDATE EMP01
SET SAL= SAL+1000
WHERE DEPTNO=(SELECT DEPTNO
FROM DEPT
WHERE LOC='DALLAS');


UPDATE DEPT01
SET (DNAME,LOC)=(SELECT DNAME,LOC
			FROM DEPT
			WHERE DEPTNO=40)
WHERE DEPTNO=20;
--UPDATE 의 서브쿼리로 여러 필드값 변경하기
SELECT *FROM DEPT;

CREATE TABLE SAM02
AS
SELECT *FROM EMP;
--SAM02에 모든 사람의 SAL,HIREDATE를 ENAME이 킹인 사람과 동일하게 모두 변경;
UPDATE SAM02
SET(SAL,HIREDATE)=(SELECT SAL,HIREDATE
			FROM SAM02
			WHERE ENAME='KING');
SELECT *FROM SAM02;
--DELETE
--따로 조건을 붙여주지 않으면 테이블의 모든 데이터를 삭제한다.
DELETE FROM DEPT01;

SELECT * FROM DEPT01;

INSERT INTO DEPT01
VALUES(30,'KING','TOKYO');

DELETE FROM DEPT01
WHERE DEPTNO=30;

DELETE FROM SAM01
WHERE JOB IS NULL;

SELECT *FROM SAM02;

DELETE FROM EMP01
WHERE DEPTNO=(SELECT DEPTNO
			FROM DEPT
			WHERE DNAME='SALES');
--서브쿼리...
DELETE FROM SAM02
WHERE DEPTNO=(SELECT DEPTNO
			FROM DEPT
			WHERE DNAME='RESEARCH');
			
-- MERGE 두개의 테이블을 합친다. 

CREATE TABLE EMP01
AS 
SELECT * FROM EMP;

DROP TABLE EMP02;

CREATE TABLE EMP02
AS
SELECT * FROM EMP
WHERE JOB='MANAGER';

SELECT*FROM EMP02;

UPDATE EMP02
SET JOB='TEST';

INSERT INTO EMP02
VALUES(8000,'SYJ','TOP',7566,'2009/01/12',1200,10,20);

MERGE INTO EMP01
USING EMP02
ON(EMP01.EMPNO=EMP02.EMPNO)
WHEN MATCHED THEN
UPDATE SET
EMP01.ENAME =EMP02.ENAME,
EMP01.JOB = EMP02.JOB,
EMP01.MGR = EMP02.MGR,
EMP01.HIREDATE = EMP02.HIREDATE,
EMP01.SAL = EMP02.SAL,
EMP01.COMM = EMP02.COMM,
EMP01.DEPTNO = EMP02.DEPTNO
WHEN NOT MATCHED THEN
INSERT VALUES(EMP02.EMPNO, EMP02.ENAME, EMP02.JOB ,EMP02.MGR ,EMP02.HIREDATE ,EMP02.SAL ,EMP02.COMM ,EMP02.DEPTNO);

SELECT *FROM EMP01;


-- COMMIT AND ROLLBACK..

SELECT * FROM EMP01;
COMMIT; --커밋 시점;

DELETE FROM EMP01;
ROLLBACK;--롤백 하면 커밋시점으로 이동;

DELETE FROM EMP01 WHERE DEPTNO=20;
COMMIT;
ROLLBACK;
SELECT *FROM EMP01;

DROP TABLE DEPT02;

CREATE TABLE DEPT02
AS
SELECT * FROM DEPT;

DELETE FROM DEPT02
WHERE DEPTNO=20;
--DDL명령어를 수행하면 자동 COMMIT이 일어난다.
CREATE TABLE DEPT03
AS
SELECT *FROM DEPT;

ROLLBACK;
SELECT * FROM DEPT03;

--TRUNCATE 
DELETE FROM DEPT03
WHERE DEPTNO=20;
--TRUNCATE 오타로 실제로 구문에 오류가 있더라도
--자동 COMMIT 이 발생한다. 구문실행만으로..
TRUNCATE TABLE DEPTPPP;

ROLLBACK;

--SAVEPOINT LABEL_NAME;
--트랜잭션을 나누어준다.
--ROLLBACK TO LABEL_NAME;으로 해당 위치로 롤백

DROP TABLE DEPT01;
CREATE TABLE DEPT01
AS
SELECT * FROM DEPT;


SELECT * FROM DEPT01;
DELETE FROM DEPT01 WHERE DEPTNO=40;
COMMIT;
DELETE FROM DEPT01 WHERE DEPTNO=30;
SAVEPOINT C1;
DELETE FROM DEPT01 WHERE DEPTNO=20;
SAVEPOINT C2;
DELETE FROM DEPT01 WHERE DEPTNO=10;

ROLLBACK;